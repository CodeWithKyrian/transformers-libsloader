name: Build OpenBLAS

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'OpenBLAS Version to Build'
        required: true
        default: 'v0.3.27'
      platform:
        description: 'Platform to Build On'
        required: true
        default: 'all'
        type: choice
        options:
          - linux
          - windows
          - macos
          - all

jobs:
  build:
    strategy:
      matrix:
        platform: [ linux, windows, macos ]
        openmp: [ 0, 1 ]
        include:
          - platform: linux
            os: ubuntu-latest
            openmp: 0
            target: HASWELL
            openmp_suffix: serial
            target_suffix: x86_64
          - platform: linux
            os: ubuntu-latest
            openmp: 0
            target: ARMV8
            openmp_suffix: serial
            target_suffix: armv8
          - platform: linux
            os: ubuntu-latest
            openmp: 1
            target: HASWELL
            openmp_suffix: openmp
            target_suffix: x86_64
          - platform: linux
            os: ubuntu-latest
            openmp: 1
            target: ARMV8
            openmp_suffix: openmp
            target_suffix: armv8
          - platform: macos
            os: macos-latest
            openmp: 0
            target: VORTEX
            openmp_suffix: serial
            target_suffix: arm64
          - platform: macos
            os: macos-latest
            openmp: 0
            target: NEHALEM
            openmp_suffix: serial
            target_suffix: x86_64
          - platform: macos
            os: macos-latest
            openmp: 1
            target: VORTEX
            openmp_suffix: openmp
            target_suffix: arm64
          - platform: macos
            os: macos-latest
            openmp: 1
            target: NEHALEM
            openmp_suffix: openmp
            target_suffix: x86_64
          - platform: windows
            os: windows-latest
            openmp: 0
            target: DYNAMIC
            openmp_suffix: serial
            target_suffix: x86_64
          - platform: windows
            os: windows-latest
            openmp: 1
            target: DYNAMIC
            openmp_suffix: openmp
            target_suffix: x86_64
      fail-fast: false
      max-parallel: 3

    runs-on: ${{ matrix.os }}

    steps:
      - name: Check if platform matches
        if: github.event.inputs.platform != 'all' && github.event.inputs.platform != matrix.platform
        run: exit 1

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: OpenMathLib/OpenBLAS
          ref: ${{ github.event.inputs.version }}

      - name: Install Dependencies (Linux)
        if: matrix.platform == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc gfortran libopenblas-dev liblapack-dev cmake

      - name: Install Dependencies (macOS)
        if: matrix.platform == 'macos'
        run: |
          brew reinstall gcc
          brew install coreutils cmake ccache llvm

      - name: Install Dependencies (Windows)
        if: matrix.platform == 'windows'
        uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: true
          release: false
          install: >-
            base-devel
            mingw-w64-ucrt-x86_64-cc
            mingw-w64-ucrt-x86_64-fc
            mingw-w64-ucrt-x86_64-cmake
            mingw-w64-ucrt-x86_64-ninja
            mingw-w64-ucrt-x86_64-ccache

      - name: Build OpenBLAS (Linux)
        if: matrix.platform == 'linux'
        run: |
          make -j$(nproc) DYNAMIC_ARCH=1 USE_OPENMP=${{ matrix.openmp }} TARGET=${{ matrix.target }} NUM_THREADS=64 ONLY_CBLAS=1 libs shared
          make PREFIX=$PWD/openblas-${{ matrix.openmp_suffix }}-${{ matrix.target_suffix }} install

      - name: Build OpenBLAS (macOS)
        if: matrix.platform == 'macos'
        run: |
          export LDFLAGS="-L/opt/homebrew/opt/llvm/lib"
          export CPPFLAGS="-I/opt/homebrew/opt/llvm/include"
          export CC="/opt/homebrew/opt/llvm/bin/clang"
          make -j$(nproc) DYNAMIC_ARCH=1 USE_OPENMP=${{ matrix.openmp }} TARGET=${{ matrix.target }} NUM_THREADS=56 FC="ccache" ONLY_CBLAS=1 libs shared
          make PREFIX=$PWD/openblas-${{ matrix.openmp_suffix }}-${{ matrix.target_suffix }} install

      - name: Build OpenBLAS (Windows)
        if: matrix.platform == 'windows'
        run: |
          mkdir build && cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON -DDYNAMIC_ARCH=ON -DUSE_OPENMP=${{ matrix.openmp }} -DUSE_THREAD=ON -DNUM_THREADS=64 -DTARGET=CORE2 -DONLY_CBLAS=1 ..
          cmake --build .
          cmake --install . --config Release --prefix install

      - name: Compress to Tarball (Linux and macOS)
        if: matrix.platform != 'windows'
        run: |
          tar -czvf openblas-${{ matrix.platform }}-${{ matrix.openmp_suffix }}-${{ matrix.target_suffix}}.tar.gz openblas-${{ matrix.openmp_suffix }}-${{ matrix.target_suffix }}

      - name: Compress to Tarball (Windows)
        if: matrix.platform == 'windows'
        run: |
          tar -czvf openblas-windows-${{ matrix.openmp_suffix }}.tar.gz build/install

      - name: Upload OpenBLAS
        uses: actions/upload-artifact@v4
        with:
          name: openblas-${{ matrix.platform }}-${{ matrix.openmp_suffix }}-${{ matrix.target_suffix }}-${{ github.event.inputs.version }}
          path: ${{ github.workspace }}/*.tar.gz
